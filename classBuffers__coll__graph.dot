digraph "Buffers"
{
 // INTERACTIVE_SVG=YES
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="Buffers",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" results" ,fontname="Helvetica"];
  Node2 [label="Results",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classResults.html",tooltip="Class to store the final results of (PD)MPK: the value of the final result at index vect_idv[i] is va..."];
  Node3 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" args" ,fontname="Helvetica"];
  Node3 [label="Args",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structArgs.html",tooltip="Class converting argc and argv into C++ types. "];
  Node4 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" mcsr" ,fontname="Helvetica"];
  Node4 [label="Mcsr",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classMcsr.html",tooltip="Modified CSR, containing information/patterns how to perform the computations for each partition..."];
  Node5 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" mptr" ,fontname="Helvetica"];
  Node5 [label="phased_vector\< idx_t \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classphased__vector.html"];
  Node6 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="std::vector\< idx_t \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node7 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" mpi_bufs" ,fontname="Helvetica"];
  Node7 [label="MpiBuffers",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classMpiBuffers.html",tooltip="MPI buffers, containing information/patterns how to perform the communication for each partition..."];
  Node5 -> Node7 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" sbuf_idcs" ,fontname="Helvetica"];
  Node8 -> Node7 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" init_idcs" ,fontname="Helvetica"];
  Node8 [label="phased_vector\< sidx\l_tidx_t \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classphased__vector.html"];
  Node9 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="std::vector\< sidx_tidx_t \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node10 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" mbuf" ,fontname="Helvetica"];
  Node10 [label="phased_vector\< double \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classphased__vector.html"];
  Node11 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="std::vector\< double  \>",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node3 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" args" ,fontname="Helvetica"];
}
